DEPTH = 2048;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN

00000000 : 20080100;  % 7: addi $t0, $zero, 0x00000100	#$t0 == 0x00000100 %
00000001 : 3c01ffff;  % 8: addiu $t1, $t0, 0xffff0001	#$t1 == 0xffff0101 %
00000002 : 34210001;  % 8:  %
00000003 : 01014821;  % 8:  %
00000004 : 01285020;  % 9: add $t2, $t1, $t0		#$t2 == 0xffff0201 %
00000005 : 014a5821;  % 10: addu $t3, $t2, $t2		#$t3 == 0x(1)fffe0402 %
00000006 : 01496024;  % 13: and $t4, $t2, $t1		#$t4 == 0xffff0001 %
00000007 : 3c01ffff;  % 14: andi $t5, $t2, 0xffff0000	#$t5 == 0xffff0000 %
00000008 : 34210000;  % 14:  %
00000009 : 01416824;  % 14:  %
0000000a : 01496025;  % 15: or $t4, $t2, $t1		#$t4 == 0xffff0301 %
0000000b : 3c01ffff;  % 16: ori $t5, $t2, 0xffff0000	#$t5 == 0xffff0201 %
0000000c : 34210000;  % 16:  %
0000000d : 01416825;  % 16:  %
0000000e : 01496026;  % 17: xor $t4, $t2, $t1		#$t4 == 0x00000300 %
0000000f : 3c01ffff;  % 18: xori $t5, $t2, 0xffff0000	#$t5 == 0x00000201 %
00000010 : 34210000;  % 18:  %
00000011 : 01416826;  % 18:  %
00000012 : 01496027;  % 19: nor $t4, $t2, $t1		#$t4 == 0x0000fcfe %
00000013 : 000a7200;  % 22: sll $t6, $t2, 8			#$t6 == 0xff020100 %
00000014 : 000e7b02;  % 23: srl $t7, $t6, 12		#$t7 == 0x000ff020 %
00000015 : 000ec303;  % 24: sra $t8, $t6, 12		#$t8 == 0xfffff020 %
00000016 : 012a7004;  % 25: sllv $t6, $t2, $t1		#$t6 == 0xfffe0402 %
00000017 : 012e7806;  % 26: srlv $t7, $t6, $t1		#$t7 == 0x7fff0201 %
00000018 : 012ec007;  % 27: srav $t8, $t6, $t1		#$t8 == 0xffff0201 %
00000019 : 01284823;  % 30: subu $t1, $t1, $t0		#$t1 == 0xffff0001 %
0000001a : 01885022;  % 31: sub $t2, $t4, $t0		#$t2 == 0x0000fbfe %
0000001b : 01880018;  % 35: mult $t4, $t0			#hi == 0x00000000		lo == 0x00fcfe00 %
0000001c : 00008010;  % 36: mfhi $s0			#$s0 == 0x00000000 %
0000001d : 00008812;  % 37: mflo $s1			#$s1 == 0x00fcfe00 %
0000001e : 030c0019;  % 38: multu $t8, $t4			#hi == 0x0000fcfd		lo == 0x04fcf8fe %
0000001f : 00009010;  % 39: mfhi $s2			#$s2 == 0x0000fcfd %
00000020 : 00009812;  % 40: mflo $s3			#$s3 == 0x04fcf8fe %
00000021 : 0188001a;  % 43: div $t4, $t0			#hi == 0x000000fe		lo == 0x000000fc %
00000022 : 0000a010;  % 44: mfhi $s4			#$s4 == 0x000000fe %
00000023 : 0000a812;  % 45: mflo $s5			#$s5 == 0x000000fc %
00000024 : 0308001b;  % 46: divu $t8, $t0			#hi == 0x00000001		lo == 0x00ffff02 %
00000025 : 0000b010;  % 47: mfhi $s6			#$s6 == 0x00000001 %
00000026 : 0000b812;  % 48: mflo $s7			#$s7 == 0x00ffff02 %
00000027 : 02400011;  % 51: mthi $s2			#hi == 0x0000fcfd %
00000028 : 02600013;  % 52: mtlo $s3			#lo == 0x04fcf8fe %
00000029 : 02d7202a;  % 55: slt $a0, $s6, $s7		#$a0 == 1 %
0000002a : 2ac50005;  % 56: slti $a1, $s6, 0x005		#$a1 == 1 %
0000002b : 01f8302b;  % 57: sltu $a2, $t7, $t8		#$a2 == 1 %
0000002c : 2ec70ff9;  % 58: sltiu $a3, $s6, 0xff9		#$a3 == 1 %
0000002d : 00000821;  % 62: addu $at, $zero, $zero		#clear register %
0000002e : 10850001;  % 63: beq $a0, $a1, BEQUAL		#go to BEQUAL %
0000002f : 2401ffff;  % 64: addiu $at, $zero, 0xffffffff	#never reaches here %
00000030 : 16d70001;  % 66: bne $s6, $s7, BNOT		#go to BNOT %
00000031 : 2401ffff;  % 67: addiu $at, $zero, 0xffffffff	#never reaches here %
00000032 : 356bf0f0;  % 71: ori $t3, $t3, 0xf0f0		#$t3 == 0xfffef4f2 %
00000033 : 23bdfff4;  % 72: addi $sp, $sp, -12		#malloc %
00000034 : afab0008;  % 73: sw $t3, 8($sp)			#store word %
00000035 : a7ab0004;  % 74: sh $t3, 4($sp)			#store halfword %
00000036 : a3ab0000;  % 75: sb $t3, 0($sp)			#store byte %
00000037 : 8fa20008;  % 76: lw $v0, 8($sp)			#$v0 == 0xfffef4f2 %
00000038 : 87a30004;  % 77: lh $v1, 4($sp)			#$v1 == 0xfffff4f2	(signal extention) %
00000039 : 97a40004;  % 78: lhu $a0, 4($sp)			#$a0 == 0x0000f4f2 %
0000003a : 83a50000;  % 79: lb $a1, 0($sp)			#$a1 == 0xfffffff2	(signal extention) %
0000003b : 93a60000;  % 80: lbu $a2, 0($sp)			#$a2 == 0x000000f2 %
0000003c : 23bd000c;  % 81: addi $sp, $sp, 12		#free %
0000003d : 3c190fff;  % 84: lui $t9, 0x0fff			#$t9 == 0x0fff0000 %
0000003e : 08100040;  % 87: j NEXT				#go to NEXT %
0000003f : 2401ffff;  % 88: addiu $at, $zero, 0xffffffff	#never reaches here %
00000040 : 0c100043;  % 90: jal OTHER			#go to OTHER %
00000041 : 00000000;  % 91: nop %
00000042 : 08100045;  % 92: j ENDJUMP			#go to JUMPEND %
00000043 : 23ff0004;  % 94: addi $ra, $ra, 4		#$ra = $ra + 4 %
00000044 : 03e00008;  % 95: jr $ra				# go to .$ra %
00000045 : 20020004;  % 99: addi $v0, $zero, 4 %
00000046 : 24050000;  % 100: 	li $a1,0 %
00000047 : 24060000;  % 101: 	li $a2,0 %
00000048 : 3407ff00;  % 102: 	li $a3,0xFF00 %
00000049 : 3c011001;  % 103: la $a0,msg1 %
0000004a : 34240000;  % 103:  %
0000004b : 0000000c;  % 106: syscall %
0000004c : 3c0140a4;  % 116: addiu $t0, $zero, 0x40A402A6	#dec 5.1253233 %
0000004d : 342102a6;  % 116:  %
0000004e : 00014021;  % 116:  %
0000004f : 44880000;  % 117: mtc1 $t0, $f0			#$f0 == 0x40A402A6 %
00000050 : 44820800;  % 118: mtc1 $v0, $f1			#$f1 == 0xfffef4f2 %
00000051 : 44991000;  % 119: mtc1 $t9, $f2			#$f2 == 0x0fff0000 %
00000052 : 44931800;  % 120: mtc1 $s3, $f3			#$f3 == 0x04fcf8fe %
00000053 : 44802000;  % 121: mtc1 $zero, $f4			#$f4 == 0x00000000 %
00000054 : 46021940;  % 123: add.s $f5, $f3, $f2 %
00000055 : 46002181;  % 124: sub.s $f6, $f4, $f0 %
00000056 : 460009c2;  % 125: mul.s $f7, $f1, $f0 %
00000057 : 46062a03;  % 126: div.s $f8, $f5, $f6 %
00000058 : 46000a44;  % 127: sqrt.s $f9, $f1 %
00000059 : 46003285;  % 128: abs.s $f10, $f6 %
0000005a : 46003a06;  % 129: mov.s $f8, $f7 %
0000005b : 46004ac7;  % 130: neg.s $f11, $f9 %
0000005c : 460a5032;  % 131: c.eq.s $f10, $f10		#coproc1 Flag set to true %
0000005d : 4600503c;  % 132: c.lt.s $f10, $f0		#coproc1 Flag set to false %
0000005e : 460a003e;  % 133: c.le.s $f0, $f10		#coproc1 Flag set to true %
0000005f : 46805320;  % 134: cvt.s.w $f12, $f10		#$f12 = integer equivalent %
00000060 : 46006364;  % 135: cvt.w.s $f13, $f12		#$f13 == $f10 %
00000061 : 23bdfffc;  % 137: addi $sp, $sp, -4		#maloc %
00000062 : e7a50000;  % 138: swc1 $f5, 0($sp) %
00000063 : c7ad0000;  % 139: lwc1 $f13, 0($sp) %
00000064 : 23bd0004;  % 140: addi $sp, $sp, 4		#free %
00000065 : 44086000;  % 142: mfc1 $t0, $f12 %
00000066 : 45040001;  % 143: bc1f 1, LABEL %
00000067 : 0810006f;  % 144: j ERRO				#se nao der branch na linha anterior, não printa msg2 %
00000068 : 20020068;  % 147: addi $v0, $zero, 104 %
00000069 : 24050000;  % 148: 	li $a1,0 %
0000006a : 24060000;  % 149: 	li $a2,0 %
0000006b : 3407ff00;  % 150: 	li $a3,0xFF00 %
0000006c : 3c011001;  % 151: la $a0,msg2			#nao vi a implementação de la no aquivo "parametros" (nem de li) %
0000006d : 34240033;  % 151:  %
0000006e : 0000000c;  % 154: syscall %
0000006f : 00000000;  % 157: nop %

END;
